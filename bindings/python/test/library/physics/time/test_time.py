################################################################################################################################################################

# @project        Library ▸ Physics
# @file           library/physics/time/test_time.py
# @author         Lucas Brémond <lucas@loftorbital.com>
# @license        Apache License 2.0

################################################################################################################################################################

import pytest

from Library.Physics.Time import Time

################################################################################################################################################################

def test_time_constructors ():

    assert Time(0, 0, 0) is not None

################################################################################################################################################################

def test_time_undefined ():

    assert Time.Undefined() is not None

################################################################################################################################################################

def test_time_midnight ():

    assert Time.Midnight() is not None

################################################################################################################################################################

def test_time_noon ():

    assert Time.Noon() is not None

################################################################################################################################################################

def test_time_parse ():

    assert Time.Parse('00:00:00') is not None
    assert Time.Parse('00:00:00', Time.Format.Standard) is not None
    assert Time.Parse('00:00:00', Time.Format.ISO8601) is not None

################################################################################################################################################################

def test_time_operators ():

    time = Time(0, 0, 0)

    assert (time == time) is not None
    assert (time != time) is not None

################################################################################################################################################################

def test_time_is_defined ():

    time = Time(0, 0, 0)

    assert time.isDefined() is not None

################################################################################################################################################################

def test_time_get_hour ():

    time = Time(0, 0, 0)

    assert time.getHour() is not None

################################################################################################################################################################

def test_time_get_minute ():

    time = Time(0, 0, 0)

    assert time.getMinute() is not None

################################################################################################################################################################

def test_time_get_second ():

    time = Time(0, 0, 0)

    assert time.getSecond() is not None

################################################################################################################################################################

def test_time_get_millisecond ():

    time = Time(0, 0, 0)

    assert time.getMillisecond() is not None

################################################################################################################################################################

def test_time_get_microsecond ():

    time = Time(0, 0, 0)

    assert time.getMicrosecond() is not None

################################################################################################################################################################

def test_time_get_nanosecond ():

    time = Time(0, 0, 0)

    assert time.getNanosecond() is not None

################################################################################################################################################################

def test_time_get_floating_seconds ():

    time = Time(0, 0, 0)

    assert time.getFloatingSeconds() is not None

################################################################################################################################################################

def test_time_to_string ():

    time = Time(0, 0, 0)

    assert time.toString() is not None
    assert time.toString(Time.Format.Standard) is not None
    assert time.toString(Time.Format.ISO8601) is not None

################################################################################################################################################################

def test_time_set_hour ():

    time = Time(0, 0, 0)

    time.setHour(1)

################################################################################################################################################################

def test_time_set_minute ():

    time = Time(0, 0, 0)

    time.setMinute(1)

################################################################################################################################################################

def test_time_set_second ():

    time = Time(0, 0, 0)

    time.setSecond(1)

################################################################################################################################################################

def test_time_set_millisecond ():

    time = Time(0, 0, 0)

    time.setMillisecond(1)

################################################################################################################################################################

def test_time_set_microsecond ():

    time = Time(0, 0, 0)

    time.setMicrosecond(1)

################################################################################################################################################################

def test_time_set_nanosecond ():

    time = Time(0, 0, 0)

    time.setNanosecond(1)

################################################################################################################################################################
